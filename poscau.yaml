# All causets are transitively reduced.
# We try to provide the cannonical labeling for each causet.
# Note that cannonical labeling based on links will likely be different from
# canonical labeling based on relations!  I choose the former for now, even
# though that is a non-standard choice. 5jul023

# Design decisions: (goal: max simplicity given flexibility)
# * just n for 'global var'
# * preceding doc for keyword defns
# * one doc for all causets
# * allow list for causet, and l: [list]

l: list representation (to add fields)
nm: name
a: adjacency matrix
sbs: state of binary storage
ps: list of parents
aut: automorphisms (null for trivial?)
n: |
  so that incomplete stages do not have to end?
  But these stages will never complete anyway!!
# Do I want to store alternate labelings?
---
# OEIS counts oeis.org/A000112 :
[1,1,2,5,16,63,318,2045,16999,183231,2567284,
 46749427,1104891746,33823827452,1338193159771,
 68275077901156,4483130665195087]
---
# Causet abbreviations:
# It looks like yaml will throw an exception if keys are not unique:
# stackoverflow.com/questions/47668308/duplicate-key-in-yaml-configuaration-file
1ch: 1-chain
2ch: 2-chain
2ach: 2-antichain
3ch: 3-chain
# L: L # == 21
Lam: Lambda
3ach: 3-antichain
4ch: 4-chain
dia: diamond
flo: flower
# pi: pi # == 22
# L1: L1 # == 211
bt: bowtie
Lam1: Lambda1
iflo: iflower
4ach: 4-antichain

5ch: 5-chain
Yp: Y-prime
nup: nu-prime
scep: sceptre
tf: tallflower
Yt: Y-toe
Ln: L-nugget # This is a standard counter-example
flop: flower-prime
inup: inu-prime
diap: diamond-prime
flo1: flower1
floh: flower-hat # Is diamond-toe a better name?
ker3: kernel3
dia1: diamond1
inup1: inu-prime1
inup2: inu-prime2
tNcl: tallNcowlick
iscep: isceptre
Vbt: Vbowtie
floft: flower-foot
st: sawtooth
diac: diamond-cap
inup: inu-prime
inuh: inu-hat # (what does hat mean specifically? 10jul023)
bttl: bowtie-tail # bt-tl?
iYt: iY-toe
btte: bowtie-toe
diatl: diamond-tail
bt1: bowtie1
pt: putter
bth: bowtie-hat
Lam2: Lambda2
iflote: iflower-toe
tY: tallY
itY: itallY
Lam11: Lambda11
LL: Lam^Lam
btc: bowtie-cap
iflo1: iflower1
itf: itallflower
5ach: 5-antichain

6ch: 6-chain
5t: 5-toe
Y2p: Y-2prime
tYp: tallY-prime
t3Y: tall3Y
tY1: tallY1
tYte: tallY-toe
t2flo: tall2flower
tYp: tallY-prime
tscep: tallSceptre
Yp1: Y-prime1
YPte: Y-prime-toe
tfp: tallflower-prime
bVtl: bigV-tail
Yv: Y^v
scepp: sceptre-prime
Lntl: L-nugget-tail
---
# list format: [abbrev, grr, sbs, parents, children]
# + ==> incomplete list
# Do I want to include the weight in both directions?  Seems so.
# include automorphisms?  natural labelings?
- 0
- [void, null, tcr, null, [1ch]]

- 1
- [1ch, null, tcr, [void], [2ch,2ach]]

- 2
- [2ch, 1, tcr, [1ch], [3ch,V,L]]
- [2ach, 0, tcr, [1ch], [[L,2],Lam,3ach]]

- 3
- [3ch, 5, tr, [2ch], [4ch,Y,nu,31]]
- [V, 3, tcr, [2ch], [[nu,2],flo,dia,V1]]
- [L, 1, tcr, [2ch, [2ach,2]], [31,V1,inu,pi,N,L1]]
- [Lam, 6, tcr, [2ach], [[N,2],bt,iY,Lam1]]
- [3ach, 0, tcr, [2ach], [[L1,3],[Lam1,3],iflo,4ach]]

- 4
- [4ch, 0b100101, tr, [3ch], [5ch,tallY,Yp,nup,41]]
- [Y, 0b010101, tr, [3ch], [[Yp,2],scep,tf,Yt,Y1]]
- [nu, 0b010011, tr, [3ch, [V,2]], [nup,Yt,Ln,goal,flop,nu1,diap]]
- [31, 0b000101, tr, [3ch, L], [41,Y1,nu1,inup,h,Np,32,311]]
- [dia, 0b110011, tr, [V], [diap,floh,dia1,iscep,Vbt]]
- [flo, 0b001011, tcr, [V], [[flop,3],flo1,bush,[floh,3],ker3]]
- [V1, 0b000011, tcr, [V, L], [[nu1,2],flo1,dia1,V11,V2,floft,[st,2],diac]]
- [inu, 0b101100, tr, [L], [h,st,inu1,inup,inuh,bttl,sail]]
- [pi, 0b001100, tcr, [L], [pi1,[V2,2],[32,2],[inup,2],w,igoal]]
- [L1, 1, tcr, [L, [3ach,3]], [V11,311,[inu1,2],[pi1,2],[N1,2],L11,Lam2,iflote,up]]
- [iY, 0b100110, tr, [Lam], [[iYt,2],pt,iY1,x,itY]]
- [N, 0b001110, tcr, [[Lam,2], L], [Np,floft,w,N1,iYt,btte,sail,diatl]]
- [bt, 0b011110, tcr, [Lam], [bt1,[btte,2],[pt,2],king,bth]]
- [Lam1, 6, tcr, [Lam, [3ach, 3]], [[N1,2],bt1,Lam2,iY1,Lam11,[iw,2],LL,btc]]
- [iflo, 0b111000, tcr, [3ach], [[iflote,3],[btc,3],iflo1,itf,iking]]
- [4ach, 0, tcr, [3ach], [[L11,4],[Lam11,6],[iflo1,4],ibush,5ach]]

- 5
- [5ch,    0b1000100101, tr, [4ch], [51,5t,Yp2,tYp,t3Y,6ch]]
- [tY,     0b0100100101, tr, [4ch], [tY1,tYte,dance,t2flo,[tYp,2],tscep]]
- [Yp,     0b0010100101, tr, [4ch, [Y,2]], [Yp1,Ypte,tfp,bVtl,Yv,Y2p,scepp,Lntl]]
- [nup,    0b0001100101, tr, [4ch, nu]]
- [41,     0b0000100101, tr, [4ch, 31]]
- [scep,   0b1100010101, tr, [Y]]
- [tf,     0b0010010101, tr, [Y]]
- [Yt,     0b0001010101, tr, [Y, nu]]
- [Y1,     0b0000010101, tr, [Y, 31]]
- [Ln,     0b1100001101, tr, [nu]]
- [goal,   0b0010100011, tr, [nu]]
- [flop,   0b0001001101, tr, [nu, [flo,3]]]
- [nu1,    0b0000001101, tr, [nu,[V1,2],31]]
- [inup,   0b1001100100, tr, [31]]
- [h,      0b0010110001, tr, [31, inu]]
- [Np,     0b0010101001, tr, [31, N]]
- [32,     0b0001100100, tr, [31, [pi,2]]]
- [diap,   0b0010110011, tr, [dia, nu]]
- [flo1,   0b0000001011, tcr, [flo, V1]]
- [bush,   0b0001001011, tcr, [flo]]
- [floh,   0b0001110011, tr, [[flo,3], dia]]
- [ker3,   0b1110001011, tr, [flo]]
- [dia1,   0b0000110011, tr, [dia, V1]]
- [iscep,  0b1000110011, tr, [dia]]
- [Vbt,    0b0110110011, tr, [dia]]
- [V11,    0b0000000011, tcr, [V1, L1]]
- [V2,     0b0001001100, tcr, [V1, [pi,2]]]
- [floft,  0b0001001110, tcr, [V1, N]]
- [st,     0b0001110010, tr, [[V1,2], inu]]
- [diac,   0b1101010100, tr, [V1]]
- [311,    0b0000000101, tr, [31,L1]]
- [inu1,   0b0000101100, tr, [inu, [L1,2]]]
- [inup,   0b0001101100, tr, [inu, [pi,2]]]
- [inuh,   0b1000101100, tr, [inu]]
- [bttl,   0b0110110001, tr, [inu]]
- [pi1,    0b0000001100, tcr, [[L1,2], pi], [222,+]]
- [w,      0b0001010110, tcr, [N, pi]]
- [igoal,  0b1000001100, tr, [pi]]
- [N1,     0b0000001110, tr, [N, [Lam1,2], [L1,2]]]
- [iYt,    0b0001100110, tr, [N, [iY,2]]]
- [btte,   0b0001011110, tcr, [[bt,2], N]]
- [sail,   0b0011110010, tr, [N, inu]] # tooth?? itooth??
- [diatl,  0b1100001110, tr, [N]]
- [bt1,    0b0000011110, tcr, [bt, Lam1]]
- [pt,     0b0011100110, tr, [[bt,2], iY]]
- [king,   0b0011011110, tcr, [bt]]
- [bth,    0b1100011110, tr, [bt]]
- [L11,    0b0000000001, tcr, [L1, [4ach,4]]]
- [Lam2,   0b0001110000, tcr, [Lam1, L1]]
- [iflote, 0b0001111000, tcr, [[iflo,3], L1]]
- [up,     0b1011100000, tr, [L1]]
- [iY1,    0b0000100110, tr, [iY, Lam1]]
- [x,      0b0100100110, tr, [iY]]
- [itY,    0b1000100110, tr, [iY]]
- [Lam11,  0b0000000110, tcr, [Lam1, [4ach,6]]]
- [iw,     0b0011101000, tcr, [[Lam1,2]]]
- [LL,     0b1001110000, tr, [Lam1]]
- [btc,    0b0011111000, tcr, [Lam1, [iflo,3]]]
- [iflo1,  0b0000111000, tcr, [iflo, [4ach,4]]]
- [itf,    0b1000111000, tr, [iflo]]
- [iking,  0b0111111000, tcr, [iflo]]
- [ibush,  0b1111000000, tcr, [4ach]]
- [5ach, 0, tcr, [4ach]]

- 6
- [51,    0b000001000100101, tr, [5ch, 41]]
- [5t,    0b000011000100101, tr, [5ch, nup]]
- [Y2p,   0b000101000100101, tr, [5ch, Yp]]
- [tYp,   0b001001000100101, tr, [5ch, [tY,2]]]
- [t3Y,   0b010001000100101, tr, [5ch]]
- [6ch,   0b100001000100101, tr, [5ch]]
- [tY1,   0b000000100100101, tr, [tY, 41]]
- [tYte,  0b000010100100101, tr, [tY, nup]]
- [dance, 0b000100100100101, tr, [tY, Yp]]
- [t2flo, 0b001000100100101, tr, [tY]]
- [tYp,   0b001001000100101, tr, [5ch, [tY,2]]]
- [tscep, 0b110000100100101, tr, [tY]]
- [Yp1,   0b000000010100101, tr, [Yp, 41, [Y1,2]]]
- [Ypte,  0b000010010100101, tr, [Yp, nup, [Yt,2]]]
- [tfp,   0b000100010100101, tr, [[tf,3], Yp]]
- [bVtl,  0b001001000010101, tr, [Yp]]
- [Yv,    0b000100100100101, tr, [Yp, tY]]
- [scepp, 0b001001100010101, tr, [[scep,2], Yp]]
- [Lntl,  0b101001000010101, tr, [Yp]]
# 1 This is getting to be difficult to do by hand, without a visual catalog.
# 2 Can also automate the entire process. 14jul023


# path to spiral-crown (KJK)
- [222, 0b000010010100000, tcr, [221], [[inup2,3],+]]
- 7
- [inup2, 0b000001000101010100000, tr, [222, inup1, inu2], [tNcl,+]]
- 8
- [tNcl,  0b0000001000101100101000000100, tr, [inup2, +]]

# royal adjective vs crown noun - same num letters
# spiral vs twist (image search them)